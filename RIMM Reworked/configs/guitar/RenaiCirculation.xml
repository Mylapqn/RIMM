<?xml version="1.0" encoding="utf-8"?>
<Items>
    <Item   name="(Guitar) Renai Circulation"
            description="From Bakemonogatari"
            identifier="guitar-renai-circulation"
            category="Misc"
            maxstacksize="1"
            Tags="smallitem,guitarnotes,musicnotes"
            scale="0.5"
            isshootable="true"
            cargocontaineridentifier="metalcrate"
            HideConditionBar="true">

        <PreferredContainer primary="abandonedcrewcab"
                            spawnprobability="0.03" />
        <PreferredContainer secondary="wreckstoragecab"
                            spawnprobability="0.03" />
        <PreferredContainer primary="outpostcrewcabinet"
                            minamount="0"
                            maxamount="1"
                            spawnprobability="0.03" />

        <Price baseprice="50" minavailable="1">
            <Price  storeidentifier="merchantoutpost"
                    multiplier="1"
                    minavailable="-1"
                    maxavailable="1" />
            <Price  storeidentifier="merchantcity"
                    multiplier="1"
                    minavailable="0"
                    maxavailable="2" />
            <Price  storeidentifier="merchantresearch"
                    multiplier="1"
                    sold="false" />
            <Price  storeidentifier="merchantmilitary"
                    multiplier="1"
                    sold="false" />
            <Price  storeidentifier="merchantmine"
                    multiplier="1"
                    sold="false" />
        </Price>
        
        <InventoryIcon  texture="%ModDir%/graphics/NotesAtlas.png"
                        sourcerect="60,0,60,60"
                        origin="0.5,0.5" />
        <Sprite texture="%ModDir%/graphics/NotesAtlas.png"
                sourcerect="60,0,60,60"
                depth="0.5"
                origin="0.5,0.5" />

        <Body width="24" height="24" />
        <Holdable slots="Any,RightHand,LeftHand" msg="ItemMsgPickUpSelect" />
        <ItemContainer  hideitems="true"
                        capacity="1"
                        drawinventory="false"
                        canbeselected="false"
                        canbecombined="true"
                        removecontaineditemsondeconstruct="true">
            <StatusEffect type="OnUse" targettype="Contained">
                <Use />
            </StatusEffect>
            <StatusEffect type="OnContained" targettype="This" condition="50" setvalue="true">
                <Conditional hastag="!eq guitar" targetcontainer="true" />
                <Use />
            </StatusEffect>
            <StatusEffect type="OnContained" targettype="This" condition="100" setvalue="true">
                <Conditional hastag="eq guitar" targetcontainer="true" />
                <SpawnItem  identifiers="rimm-guitar-song-renai-circulation"
                            spawnposition="ThisInventory" />
            </StatusEffect>
            <StatusEffect type="OnNotContained" targettype="Contained">
                <Remove />
            </StatusEffect>
            <Containable items="song" />
        </ItemContainer>
    </Item>

    <Item   name="Song: Renai Circulation"
            identifier="rimm-guitar-song-renai-circulation"
            Tags="song"
            category="Misc"
            hideinmenus="true">

        <Sprite texture="Content/Items/Electricity/signalcomp.png"
                depth="0.8"
                sourcerect="0,160,4,4"
                origin="0.5,0.5" />
        <Body width="48" height="48" />
        <InventoryIcon  texture="Content/Items/Electricity/signalcomp.png"
                        sourcerect="0,160,4,4"
                        origin="0.5,0.5" />

        <ItemComponent>
            <StatusEffect type="OnUse" targettype="Parent">
                <Conditional hastag="eq guitar" targetcontainer="true" />
                <sound  file="%ModDir%/audio/guitar/guitar-renai-circulation.ogg"
                        type="OnUse"
                        loop="true"
                        volume="1" />
            </StatusEffect>
            <StatusEffect type="OnUse" targettype="This">
                <Conditional condition="lt 60" targetcontainer="true" />
                <Remove />
            </StatusEffect>
        </ItemComponent>
    </Item>
</Items>